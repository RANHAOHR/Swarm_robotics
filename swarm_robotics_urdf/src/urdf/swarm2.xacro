<?xml version="1.0"?>
<robot 
     xmlns:xacro="http://www.ros.org/wiki/xacro" name="swarm2">
     <!-- define the base-link origin to lie at floor level, between the drive wheels-->
     <!--main body is a simple box; origin is a center of box-->
    <xacro:property name="bodylen" value="0.0154" />
    <xacro:property name="bodywidth" value="0.0154" />
    <xacro:property name="bodyheight" value="0.0154" />
    <!--xacro:property name="bodyclearance" value="0.4" /-->  <!--clearance from bottom of box to ground-->  
    <!-- derived values-->
    <xacro:property name="half_bodylen" value="${bodylen/2.0}" /> 
    <xacro:property name="half_bodyheight" value="${bodyheight/2.0}" /> 
    <!-- placement of main body relative to base link frame -->
    <xacro:property name="bodyOX" value="0" />  
    <xacro:property name="bodyOY" value="0" />   
    <xacro:property name="bodyOZ" value="0.01" />     
            
    <!-- define the drive-wheel dimensions-->
    <xacro:property name="tirediam" value="0.03" />
    <xacro:property name="tirerad" value="${tirediam/2.0}" />    
    <xacro:property name="tirewidth" value="0.004" />
    <!-- "track" is the distance between the drive wheels -->
    <xacro:property name="track" value="0.0354" />

    <xacro:property name="M_PI" value="3.1415926535897931" />
    <xacro:property name="lidarheight" value="0.000381" />
    
    <!--here is a default inertia matrix with small, but legal values; use this when don't need accuracy for I -->
    <!--model will assign inertia matrix dominated by main body box -->

    <xacro:macro name="wheel" params="prefix reflect">
        <link name="${prefix}_wheel">
            <visual>              
                <geometry>
                    <cylinder radius="${tirerad}" length="${tirewidth}"/>
                </geometry>
            </visual>

            <collision>              
                <geometry>
                    <cylinder radius="${tirerad}" length="${tirewidth}"/>
                </geometry>
            </collision>
  <inertial>
    <mass value="0.01" />
    <origin xyz="0 0 0.002" />
    <inertia ixx="0.000005659" ixy="0.0" ixz="0.0"
      iyy="0.000005659" iyz="0.0"
      izz="0.00001125" />
  </inertial>
        </link>

        <joint name="${prefix}_wheel_joint" type="continuous">
            <axis xyz="0 0 1"/>
            <parent link="base_link"/>
            <child link="${prefix}_wheel"/>
            <origin xyz="${bodyOX} ${reflect*track/2} ${tirerad}" rpy="0 ${M_PI/2} ${M_PI/2}"/>
            <limit effort="100" velocity="15" />
            <joint_properties damping="0.0" friction="0.0" />
        </joint>
    </xacro:macro>
   
    <link name="base_link">
        <visual>
            <geometry>
                <box size="${bodylen} ${bodywidth} ${bodyheight}"/>
            </geometry>
            <origin xyz="${bodyOX} ${bodyOY} ${bodyOZ}" rpy="0 0 0"/>
        </visual>
        <collision>
            <geometry>
                <box size="${bodylen} ${bodywidth} ${bodyheight}"/>
            </geometry>
            <origin xyz="${bodyOX} ${bodyOY} ${bodyOZ}" rpy="0 0 0"/>
        </collision>
  <inertial>
    <mass value="0.3" />
    <origin xyz="0 0 ${bodyOZ}" />
    <inertia ixx="0.032258" ixy="0.0" ixz="0.0"
      iyy="20.2258" iyz="0.0"
      izz="0.032258" />
  </inertial>
    </link>
 
  
    <xacro:wheel prefix="left" reflect="1"/>
    <xacro:wheel prefix="right" reflect="-1"/>

 <gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>100</updateRate>
    <leftJoint>left_wheel_joint</leftJoint>
    <rightJoint>right_wheel_joint</rightJoint>
    <wheelSeparation>${track}</wheelSeparation>
    <wheelDiameter>${tirediam}</wheelDiameter>
    <torque>200</torque>
    <wheelTorque>100</wheelTorque>
    <commandTopic>cmd_vel</commandTopic>
    <odometryTopic>odom</odometryTopic>
    <odometryFrame>odom</odometryFrame>
    <robotBaseFrame>base_link</robotBaseFrame>
    <publishWheelTF>true</publishWheelTF>
    <publishWheelJointState>true</publishWheelJointState>
  </plugin>
 </gazebo> 


  <gazebo reference="right_wheel">
    <mu1>100000</mu1>
    <mu2>100000</mu2>
    <material>Gazebo/Green</material>
  </gazebo>
  <gazebo reference="left_wheel">
    <mu1>100000</mu1>
    <mu2>100000</mu2>
    <material>Gazebo/Red</material>
  </gazebo>

  <gazebo reference="base_link">
    <material>Gazebo/Black</material>
  </gazebo>
  
   
  <link name="lidar_link">
      <collision>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
              
          <box size="${bodylen} ${bodywidth} ${lidarheight}"/>    
          </geometry>
      </collision>

      <visual>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>s
          <box size="${bodylen} ${bodywidth} ${lidarheight}"/> 
          </geometry>
      </visual>

      <inertial>
          <mass value="0.00000001" />
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <inertia ixx="0.000032258" ixy="0" ixz="0" iyy="0.000032258" iyz="0" izz="0.000032258" />
      </inertial>
  </link>


  <joint name="lidar_joint" type="fixed">
      <axis xyz="0 1 0" />
      <origin xyz="${bodyOX} ${bodyOY} ${bodyOZ}" rpy="0 0 0"/>
      <parent link="base_link"/>
      <child link="lidar_link"/>
  </joint>
  
  <gazebo reference="lidar_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <material>Gazebo/Blue</material>

    <sensor type="gpu_ray" name="sick_lidar_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>181</samples>
            <resolution>1</resolution>
            <min_angle>-3.140796</min_angle>
            <max_angle>3.140796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>1.10</min>
          <max>40.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_lidar_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/scan2</topicName>
        <frameName>lidar_link</frameName>
      </plugin>
    </sensor>

  </gazebo>  

</robot>
